[{"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/App.js":"1","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/reportWebVitals.js":"2","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/index.js":"3","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/index.js":"4","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/index.js":"5","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/assets/icons/svg-paths.js":"6","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/circle-button.js":"7","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/api/api.js":"8","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/api/client.js":"9","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/scrollToTop.js":"10","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/index.js":"11","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/Graphic.js":"12","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/Stats.js":"13","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/Hero.js":"14","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/HomePage.js":"15","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/about/AboutPage.js":"16","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/text-button.js":"17","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/stat-detail.js":"18","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/photos/index.js":"19","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/photos/PhotoPage.js":"20","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/about/index.js":"21","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/highlights/index.js":"22","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/highlights/HighlightPage.js":"23","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/auth/index.js":"24","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/auth/LoginPage.js":"25","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/footer.js":"26","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/nav.js":"27","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/not-found.js":"28","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/video-player.js":"29","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/video-page/index.js":"30","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/video-page/VideoPage.js":"31","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/about/HeroDetail.js":"32"},{"size":5732,"mtime":1614657208191,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1611622572907,"results":"35","hashOfConfig":"34"},{"size":503,"mtime":1611623918810,"results":"36","hashOfConfig":"34"},{"size":198,"mtime":1612892639632,"results":"37","hashOfConfig":"34"},{"size":167,"mtime":1612899058821,"results":"38","hashOfConfig":"34"},{"size":27354,"mtime":1612938309952,"results":"39","hashOfConfig":"34"},{"size":219,"mtime":1611624560775,"results":"40","hashOfConfig":"34"},{"size":192,"mtime":1613757774059,"results":"41","hashOfConfig":"34"},{"size":227,"mtime":1614749283863,"results":"42","hashOfConfig":"34"},{"size":405,"mtime":1611624985619,"results":"43","hashOfConfig":"34"},{"size":101,"mtime":1612398691826,"results":"44","hashOfConfig":"34"},{"size":434,"mtime":1611977849468,"results":"45","hashOfConfig":"34"},{"size":529,"mtime":1614658476260,"results":"46","hashOfConfig":"34"},{"size":455,"mtime":1614748605919,"results":"47","hashOfConfig":"34"},{"size":958,"mtime":1614748630770,"results":"48","hashOfConfig":"34"},{"size":3342,"mtime":1614658863144,"results":"49","hashOfConfig":"34"},{"size":346,"mtime":1612900038757,"results":"50","hashOfConfig":"34"},{"size":1558,"mtime":1614658957162,"results":"51","hashOfConfig":"34"},{"size":28,"mtime":1612398208565,"results":"52","hashOfConfig":"34"},{"size":3496,"mtime":1612909235230,"results":"53","hashOfConfig":"34"},{"size":56,"mtime":1612903697353,"results":"54","hashOfConfig":"34"},{"size":31,"mtime":1612398794109,"results":"55","hashOfConfig":"34"},{"size":249,"mtime":1612398777275,"results":"56","hashOfConfig":"34"},{"size":27,"mtime":1612399225562,"results":"57","hashOfConfig":"34"},{"size":2442,"mtime":1614203005069,"results":"58","hashOfConfig":"34"},{"size":1331,"mtime":1612892440227,"results":"59","hashOfConfig":"34"},{"size":2230,"mtime":1612903432494,"results":"60","hashOfConfig":"34"},{"size":180,"mtime":1612892597235,"results":"61","hashOfConfig":"34"},{"size":1545,"mtime":1612936932759,"results":"62","hashOfConfig":"34"},{"size":27,"mtime":1612899052736,"results":"63","hashOfConfig":"34"},{"size":3563,"mtime":1612937000689,"results":"64","hashOfConfig":"34"},{"size":1214,"mtime":1614658704493,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1v5wzrg",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"69"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"69"},"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/App.js",["144","145"],"import React, { Component } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nimport './css/main.css'\nimport { Home, AboutPage, PhotoPage, HighlightPage, LoginPage, VideoPage } from './components'\nimport { Footer, Nav, NotFound } from './elements'\nimport { getClient } from './api/client'\nimport ScrollToTop from './scrollToTop';\n\nexport const ProjectDetails = [\n  { pageName: \"Home\", slug: '/home', navTheme: 'light', hidden: false },\n  { pageName: \"About\", slug: '/about', navTheme: 'dark', hidden: false },\n  { pageName: \"Photos\", slug: '/photos', navTheme: 'dark', hidden: false },\n  { pageName: \"Highlights\", slug: '/highlights', navTheme: 'dark', hidden: false },\n  { pageName: \"Full Games\", slug: '/full-games', navTheme: 'dark', hidden: false },\n  { pageName: \"Login\", slug: '/login', navTheme: 'dark', hidden: true },\n]\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      client: {},\n      isAppReady: false,\n      navVisibility: 'hidden',\n      navListHover: 'not-hover',\n      navTheme: 'light',\n      isNavVisible: true\n    }\n  }\n\n  async componentDidMount() {\n    let isNavDark = false\n    const path = window.location.pathname\n\n    try {\n\n      let client = await getClient()\n      client = client.data[0]\n\n      console.log(\"YEE Boi\", path, client)\n\n      if (\n        path === '/photos' ||\n        path === '/about' ||\n        path === '/highlights' ||\n        path === '/login' ||\n        path === '/full-games'\n      ) {\n        isNavDark = true\n      }\n      // debugger\n      this.setState({ client: client, isAppReady: true, navTheme: (isNavDark) ? 'dark' : 'light' })\n      console.log(\"YEE Boi\", this.state.client)\n\n\n    } catch (e) {\n      console.log(\"ERR\", e)\n    }\n  }\n\n\n  listHover = () => {\n    const { navListHover } = this.state\n\n    this.setState({ navListHover: 'is-hover' });\n\n    if (navListHover === 'not-hover') {\n      this.setState({ navListHover: 'is-hover' });\n    } else {\n      this.setState({ navListHover: 'not-hover' });\n    }\n  }\n\n\n  onToggleNav = () => {\n    const { navVisibility } = this.state\n\n    this.setState({ navVisibility: 'show' });\n\n    if (navVisibility === 'hidden') {\n      this.setState({ navVisibility: 'show', navTheme: 'light' });\n    } else {\n      this.setState({ navVisibility: 'hidden' });\n    }\n  }\n\n  onToggleNavVisibility = () => {\n    const { isNavVisible } = this.state\n\n    if (isNavVisible) {\n      this.setState({ isNavVisible: false });\n    }\n    if (!isNavVisible) {\n      this.setState({ isNavVisible: true });\n    }\n  }\n\n\n  onNavigateHome = () => {\n    let { navVisibility } = this.state\n\n    if (navVisibility === 'show') {\n      this.setState({ navVisibility: 'hidden', navTheme: 'light' });\n    }\n    this.setState({ navTheme: 'light' });\n\n  }\n\n  onHideNav = (navSlug) => {\n\n    const page = ProjectDetails.find(d => d.slug === navSlug)\n\n    this.setState({ navVisibility: 'hidden', navTheme: page.navTheme });\n  }\n\n\n\n\n  toggleNavToLight = () => {\n    const { navTheme } = this.state\n\n    if (navTheme === 'dark') {\n      this.setState({ navTheme: 'light' })\n    }\n\n  }\n\n  toggleNavToDark = () => {\n    const { navTheme } = this.state\n\n    if (navTheme === 'light') {\n      this.setState({ navTheme: 'dark' })\n    }\n\n  }\n\n  render() {\n\n    const { client, isAppReady, navVisibility, navListHover, navTheme, isNavVisible } = this.state\n\n    if (isAppReady) {\n      return (\n        <BrowserRouter>\n          <Nav\n            data={{ ...client }}\n            projectDetails={ProjectDetails}\n            visibility={navVisibility}\n            listHover={navListHover}\n            theme={navTheme}\n            onNavHome={this.onNavigateHome}\n            onHideNav={(slug) => this.onHideNav(slug)}\n            isNavVisible={isNavVisible}\n            onToggleNav={this.onToggleNav}\n            onListHover={this.listHover} />\n          <div>\n            <Switch>\n              <Route exact path=\"/\" render={() => {\n                return <Redirect to=\"/home\" push />;\n              }} />\n\n              <Route exact path=\"/home\" render={() => {\n                return <Home data={{ ...client }} onNavTo={(slug) => this.onHideNav(slug)} />;\n              }} />\n\n              <Route exact path=\"/about\" render={() => {\n                return <AboutPage data={{ ...client }} />;\n              }} />\n\n              <Route exact path=\"/photos\" render={() => {\n                return <PhotoPage data={{ ...client }} toggleHeader={this.onToggleNavVisibility} />;\n              }} />\n\n              <Route exact path=\"/highlights\" render={() => {\n                return (\n                  <VideoPage\n                    title={\"Highlights\"}\n                    textDetails={\"A collection of highlights by \"}\n                    data={{ ...client }}\n                    toggleHeader={this.onToggleNavVisibility} />\n                )\n              }} />\n\n              <Route exact path=\"/full-games\" render={() => {\n                return (\n                  <VideoPage\n                    title={\"Full Games\"}\n                    textDetails={\"A collection of full games played by \"}\n                    data={{ ...client }}\n                    toggleHeader={this.onToggleNavVisibility} />\n                )\n              }} />\n\n              <Route exact path=\"/login\" render={() => {\n                return <LoginPage />;\n              }} />\n\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n          <Footer isNavVisible={isNavVisible} />\n        </BrowserRouter>\n      );\n    } else\n      return (\n        <div style={{ backgroundColor: 'red', height: '100vh', width: '100vw' }}>\n\n        </div>\n      )\n\n  }\n}\n\nexport default App;\n\n\n\n",["146","147"],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/reportWebVitals.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/assets/icons/svg-paths.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/circle-button.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/api/api.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/api/client.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/scrollToTop.js",["148"],"import React, { PureComponent } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends PureComponent {\n\n  componentDidUpdate(prevProps) {\n    let { location } = this.props\n\n    if (location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    let { children } = this.props\n    \n    return children\n  }\n}\n\nexport default withRouter(ScrollToTop)","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/Graphic.js",["149"],"import { BasketballGraphic, BasketballGraphic3 } from '../../assets/icons/svg-paths'\n\n\nexport const Graphic = () => {\n    return (\n      <div className=\"home-graphic \">\n        <div className=\"bb-graphic\">\n          <BasketballGraphic3\n            backgroundColor={'#fff'}\n            textBlock1={'Fundamentals'}\n            textBlock2={'Mixed with'}\n            textBlock3={\"Sauce\"}\n          />\n        </div>\n      </div>\n    )\n  }","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/Stats.js",["150"],"import React from 'react'\nimport { HomeDownIcon } from '../../assets/icons/svg-paths'\nimport { StatsDetail } from '../../elements'\n\nexport const Stats = ({ stats }) => {\n\n  console.log(\"STAT DATA\", stats)\n  return (\n    <div className={'stats-container'}>\n      <div className=\"distribute distribute-between distribute-horizontal full-width\">\n        {stats.map((stat) => {\n          return (\n              <StatsDetail textHeader={stat.headline} textDetail={stat.value} />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\n","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/Hero.js",["151","152"],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/home/HomePage.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/about/AboutPage.js",["153"],"\nimport React, { useState } from 'react';\nimport { StatsDetailSmall, LinkDetail, BioDetail } from '../../elements'\nimport { HeroDetails } from './'\nimport { FacebookIcon } from '../../assets/icons/svg-paths'\n\nexport const AboutPage = ({ data }) => {\n    const { heroPhoto, firstName, stats, clientLinks, aboutHeroLong, clientStats, clientInfo } = data\n\n    return (\n        <div className=\"full-width\">\n            <div className=\"distribute distribute-center full-width\" style={{ minHeight: '75vh' }}>\n                <HeroDetails\n                    photoRef={heroPhoto}\n                    name={firstName}\n                    text={aboutHeroLong}\n                    clientStats={clientStats} />\n            </div>\n            <StatDetails\n                bio={clientInfo}\n                stats={stats}\n                links={clientLinks} />\n        </div>\n    )\n}\n\n\n\n\nconst StatDetails = ({ stats, bio, links }) => {\n    const data = [\n        'Stats',\n        'Biography',\n        'Links'\n    ]\n    const [selected, toggleTabs] = useState(0)\n\n\n\n    const onToggle = (index) => {\n        toggleTabs(index)\n    }\n\n\n\n    return (\n        <div className={\"about-stats \"}>\n            <div className=\"header-container \">\n                <ul className=\"distribute distribute-horizontal  distribute-even \">\n                    {data.map((e, i) => {\n                        return (\n                            <a\n                                onClick={() => onToggle(i)}\n                                style={{ opacity: (selected === i) ? '1' : null }}>\n                                {e}\n                            </a>\n                        )\n                    })}\n                </ul>\n            </div>\n\n            <div className={'text-block full-width'}>\n\n                {(data[selected] === 'Biography') && (\n                    <div className=\"\">\n                        {bio.map((s, i) => {\n                            return (\n                                <BioDetail\n                                    headlineText={s.headline}\n                                    detailText={s.value} />\n                            )\n                        })}\n                    </div>\n                )}\n\n                {(data[selected] === 'Stats') && (\n                    <div className=\"grid required stats-grid\">\n                        {stats.map((s, i) => {\n                            return (\n                                <StatsDetailSmall\n                                    textHeader={s.headline}\n                                    textDetail={s.value}\n                                />\n                            )\n                        })}\n                    </div>\n\n                )}\n\n                {(data[selected] === 'Links') && (\n                    <div className=\"grid required links-grid\">\n                        {links.map((s, i) => {\n                            return (\n                                <LinkDetail\n                                    icon={<FacebookIcon color={'white'} />}\n                                    onClick={() => null}\n                                    linkName={s.headline}\n                                />\n                            )\n                        })}\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\n\n\n\n","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/text-button.js",["154"],"import { NavLink, withRouter } from 'react-router-dom';\n\n\nexport const TextButton = ({ children, onClick }) => {\n    const _Click = () => {\n        onClick()\n    }\n\n    return (\n        <NavLink onClick={_Click} to={'/about'} >\n            <div className=\"clickable-text\" >\n                {children}\n            </div>\n        </NavLink>\n    )\n}","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/stat-detail.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/photos/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/photos/PhotoPage.js",["155","156"],"import React, { useState, useCallback } from 'react'\n\nimport { XIcon, LeftArrowIcon, RightArrowIcon } from '../../assets/icons/svg-paths'\n\n\nexport const PhotoPage = ({ data, toggleHeader }) => {\n    const [currentImage, setCurrentImage] = useState(0);\n    const [isViewerOpen, setIsViewerOpen] = useState(false);\n\n    const { photoRefs, firstName } = data\n\n    const openImageViewer = useCallback((index) => {\n        setCurrentImage(index);\n        setIsViewerOpen(true);\n        toggleHeader()\n\n    }, []);\n\n    const closeImageViewer = () => {\n        setCurrentImage(0);\n        setIsViewerOpen(false);\n        toggleHeader()\n\n    };\n\n    return (\n        <div className=\"photo-page full-width\">\n            {(!isViewerOpen)\n                ? <div>\n                    <div className=\"header\">\n                        <h1>Photos</h1>\n                        <p>A collection of photos of {firstName}</p>\n\n                    </div>\n\n                    <div className=\"full-width\">\n                        <div className=\" photo-grid required grid\">\n                            {photoRefs.map((p, index) => (\n                                <div className=\"photo-container required br-1\" onClick={() => openImageViewer(index)}>\n                                    <div\n                                        className=\"image\"\n                                        key={index}\n                                        style={{ backgroundImage: `url(${p.url})` }} />\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n\n\n                </div>\n                : <div >\n                    <PhotoViewer\n                        src={photoRefs}\n                        currentIndex={currentImage}\n                        onClose={closeImageViewer} å />\n                </div>\n\n            }\n        </div>\n    )\n}\n\n\nconst PhotoViewer = ({ src, currentIndex, onClose }) => {\n\n    const [index, setIndex] = useState(currentIndex);\n    const photoMax = src.length\n\n    const onNextPhoto = () => {\n        if (index === (photoMax - 1)) {\n            return\n        }\n        setIndex(index + 1)\n    }\n\n    const onPrevPhoto = () => {\n        if (index === 0) {\n            return\n        }\n        setIndex(index - 1)\n    }\n\n    return (\n        <div className=\"photo-viewer\">\n            <div className=\"distribute distribute-horizontal \">\n\n                <div className=\"text\">\n                    <h1 className=\"icon\">\n                        {(index + 1).toString()} of {photoMax.toString()}\n                    </h1>\n                </div>\n\n                <div className=\"left\" onClick={onPrevPhoto}>\n                    <div className=\"icon\">\n                        <LeftArrowIcon color={'#757575'} />\n                    </div>\n                </div>\n\n                <div className=\"middle-contents\">\n                    <div className=\"photo\">\n                        <img src={src[index].url} />\n                    </div>\n\n\n                </div>\n\n                <div className=\"right\" onClick={onNextPhoto}>\n                    <div className=\"icon\">\n                        <RightArrowIcon color={'#757575'} />\n                    </div>\n                </div>\n\n                <div className=\"x\" onClick={onClose}>\n                    <div className=\"icon\">\n                        <XIcon color={'#757575'} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/about/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/highlights/index.js",[],["157","158"],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/highlights/HighlightPage.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/auth/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/auth/LoginPage.js",["159","160"],"import React, { useState } from 'react'\nimport { LockIcon } from '../../assets/icons/svg-paths'\n\n\nexport const LoginPage = () => {\n    const [error, toggleError] = useState(false)\n    const [password, onChangePassword] = useState('')\n\n\n    const onLogin = () => {\n\n    }\n\n    const onChangeText = (text) => {\n        console.log(\"TEXT\", text)\n\n        onChangePassword(text)\n    }\n\n    return (\n        <div className=\"login-page\">\n            <div className=\"distribute distribute-center full-height\">\n                <div className=\"distribute distribute-vertical distribute-even\" style={{ height: '800px' }}>\n\n                    <div className=\"distribute distribute-center\">\n                        <h1>Login</h1>\n\n                        <div className=\"icon pl-1 pt-1\">\n                            <LockIcon color={'black'} />\n                        </div>\n                    </div>\n                    <Input\n                        type={\"email\"}\n                        placeholder={\"Password\"}\n                        error={error}\n                        errorMessage={\"Incorrect Password\"}\n                        onChangeText={(text) => onChangeText(text)}\n                        value={password}\n                    />\n                    <SubmitButton isEnabled={(password.length > 0) ? true : false} />\n\n                    <div className=\"distribute distribute-center\" style={{ width: '60vw' }}>\n                        <p>\n                            Login is only available to the owner of this website. If just visiting please stay far away from login and enjoy the content. If you, { },  forgot your password please contact the developer at ryanmurphy125@gmail.com.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n\nconst SubmitButton = ({ isEnabled, }) => {\n    return (\n        <div className=\"submit-button\">\n            <input disabled={!isEnabled} type=\"submit\" value=\"Submit\" />\n        </div>\n    )\n}\n\n\nconst Input = ({ type, placeholder, error, errorMessage, onChangeText, value }) => {\n    return (\n        <div className=\"input-container\">\n            <input type={type} placeholder={placeholder} autoComplete=\"off\" name=\"password\" onInput={(e) => onChangeText(e.target.value)} value={value} />\n            {(error)\n                ? <span class=\"error\">{errorMessage}</span>\n                : ''\n            }\n        </div>\n    )\n}","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/footer.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/nav.js",["161"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ClientIcon } from '../assets/icons/svg-paths'\n\nexport const Nav = ({ data, projectDetails, listHover, visibility, onNavHome, onHideNav, onToggleNav, onListHover, theme, onNavLogin, isNavVisible }) => {\n\n  const { firstName, lastName } = data\n\n  return (\n    <div style={{display: (isNavVisible) ? null : 'none'}}>\n      <div className=\"logo\">\n        <NavLink\n          onClick={onNavHome}\n          to=\"/\">\n          <a style={{ color: (theme === 'light') ? '#fff' : '#000' }}>\n            {firstName} {lastName}\n          </a>\n        </NavLink>\n      </div>\n\n      <div className=\"hamburger-container distribute distribute-center \">\n\n        <NavLink to={'/login'} onClick={() => onHideNav('/login')} >\n          <div className=\"client\" onClick={onNavLogin}>\n            <ClientIcon color={(theme === 'light') ? '#fff' : '#000'} />\n          </div>\n        </NavLink>\n\n\n        <HamburgerIcon\n          theme={theme}\n          visibility={visibility}\n          onClick={onToggleNav} />\n      </div>\n\n      <div className={\"nav \" + (visibility)}>\n        <div className=\"flex distribute distribute-center\">\n          <ul className={\"nav-list \" + (listHover)} onMouseEnter={onListHover} onMouseLeave={onListHover}>\n            {projectDetails.map((project, index) => {\n              const { pageName, slug } = project\n              return (\n                <li >\n                  <NavLink onClick={() => onHideNav(slug)} to={slug} >\n                    {pageName}\n                  </NavLink>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst HamburgerIcon = ({ visibility, onClick, theme }) => {\n\n\n\n  return (\n    <div onClick={onClick}>\n      <div className={\"hamburger \" + visibility}>\n        <span style={{ backgroundColor: (theme === 'light') ? '#fff' : '#000' }} ></span>\n        <span style={{ backgroundColor: (theme === 'light') ? '#fff' : '#000' }}></span>\n        <span style={{ backgroundColor: (theme === 'light') ? '#fff' : '#000' }}></span>\n        <span style={{ backgroundColor: (theme === 'light') ? '#fff' : '#000' }}></span>\n      </div>\n    </div>\n  )\n}","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/not-found.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/elements/video-player.js",["162"],"import React, { Component } from 'react';\n\nexport class VideoPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false,\n    }\n    this.play = this.play.bind(this);\n  };\n\n  play() {\n    this.setState({ play: true });\n  }\n\n  render() {\n    const { src, currentIndex, isVideoPlaying, onPlay } = this.props;\n\n    const videoSrc = 'https://www.youtube.com/embed/' + src[currentIndex].videoId + '?autoplay=1'\n    const thumb = 'http://img.youtube.com/vi/' + src[currentIndex].videoId + '/0.jpg'\n\n\n    return (\n      <div className=\"full-width stripe_6\">\n        <div className=\"watch-youtube-block\">\n          <div className=\"watch-vid-container watch-vid-preview\" onClick={onPlay} style={{ backgroundImage: `url(${thumb})` }}>\n\n            <div className=\"player-content\">\n\n              {(isVideoPlaying === true)\n                ? <div className=\"embed-container\">\n                  <iframe\n                    src={videoSrc}\n                    width=\"560\"\n                    height=\"315\"\n                    frameborder=\"0\"\n                    allowfullscreen\n                    allow=\"accelerometer;  autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture \"\n                  />\n                </div>\n                : <span className={\"play-button \" + ((isVideoPlaying === true) ? 'is-hidden' : 'is-visible')}>PLAY</span>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nVideoPlayer.defaultProps = {\n  playerSize: 'default',\n};\n\n","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/video-page/index.js",[],"/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/video-page/VideoPage.js",["163"],"import React, { useState } from 'react'\n\nimport { VideoPlayer } from '../../elements'\nimport { XIcon, RightArrowIcon, LeftArrowIcon } from '../../assets/icons/svg-paths'\n\nexport const VideoPage = ({ data, toggleHeader, textDetails, title }) => {\n    const { fullGameRefs, firstName } = data\n\n    const [currentIndex, setIndex] = useState(0);\n    const [active, isVideoActive] = useState(false);\n    const [playing, isVideoPlaying] = useState(false);\n\n\n    const onSelectVideo = (index) => {\n        setIndex(index)\n        isVideoActive(true)\n        toggleHeader()\n    }\n\n    const onDisableVideo = () => {\n        isVideoActive(false)\n        toggleHeader()\n    }\n\n    const onNextVideo = () => {\n        if (currentIndex === (fullGameRefs.length - 1)) {\n            return\n        }\n        setIndex(currentIndex + 1)\n        isVideoPlaying(false)\n\n    }\n\n    const onPrevVideo = () => {\n        if (currentIndex === 0) {\n            return\n        }\n        setIndex(currentIndex - 1)\n        isVideoPlaying(false)\n\n    }\n\n    const playVideo = () => {\n        isVideoPlaying(true)\n    }\n\n    return (\n        <div className=\"full-width full-height video-page\">\n            {(!active)\n                ? <div>\n                    <div className=\"header\">\n                        <h1>{title}</h1>\n                        <p>{textDetails} {firstName}</p>\n                    </div>\n\n                    <div className=\"full-width\">\n                        <div className=\" video-grid required grid\">\n                            {fullGameRefs.map((v, index) => (\n                                <Box data={v} index={index} onClick={() => onSelectVideo(index)} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n                : <div className=\"distribute distribute-center full-height\">\n                    <div className=\"text\">\n                        <h1 className=\"icon\">\n                            {(currentIndex + 1).toString()} of {fullGameRefs.length.toString()}\n                        </h1>\n                    </div>\n\n                    <div className=\"left\" onClick={onPrevVideo}>\n                        <div className=\"icon\">\n                            <LeftArrowIcon color={'#757575'} />\n                        </div>\n                    </div>\n\n                    <VideoPlayer\n                        onPlay={() => playVideo()}\n                        isVideoPlaying={playing}\n                        currentIndex={currentIndex}\n                        src={fullGameRefs} />\n                    <div className=\"right\" onClick={onNextVideo}>\n                        <div className=\"icon\">\n                            <RightArrowIcon color={'#757575'} />\n                        </div>\n                    </div>\n\n                    <div className=\"x\" onClick={() => onDisableVideo()}>\n                        <div className=\"icon\">\n                            <XIcon color={'#757575'} />\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport const Box = ({ data, index, onClick }) => {\n    const { videoId, url } = data\n\n    const thumb = 'http://img.youtube.com/vi/' + videoId + '/0.jpg'\n    return (\n        <div>\n            <div className=\"video-container required br-1\" onClick={onClick}>\n                <div\n                    className=\"video-thumbnail\"\n                    key={index}\n                    style={{ backgroundImage: `url(${thumb})` }} />\n            </div>\n        </div>\n    )\n}","/Users/ryanmurphy/Desktop/projects/pats-site-root/recrutment-base/client/src/components/about/HeroDetail.js",["164"],"import { StatsDetailSmall } from '../../elements'\n\n\nexport const HeroDetails = ({ photoRef, name, text, clientStats }) => {\n    return (\n        <div className=\"about-hero full-width pt-5 pb-5\">\n            <div className=\" distribute distribute-even distribute-center pt-5\">\n                <div className=\"text-block\">\n                    <h1>About {name}</h1>\n                    <h2>{text}</h2>\n                </div>\n\n                <div className=\"hero-image\">\n                    <img src={photoRef} />\n                </div>\n\n            </div>\n\n            <div className=\"full-width pb-5\">\n                <div className=\"grid required stats-grid \">\n                    {clientStats.map((s, i) => {\n                        return (\n                            <StatsDetailSmall\n                                textHeader={s.headline}\n                                textDetail={s.value}\n                                // textDetail={\"s.value\"}\n                                headlineColor={'black'}\n                                detailColor={'#9e9e9e'}\n                            />\n                        )\n                    })}\n                </div>\n            </div>\n\n        </div>\n    )\n}",{"ruleId":"165","severity":1,"message":"166","line":10,"column":38,"nodeType":"167","messageId":"168","endLine":10,"endColumn":51},{"ruleId":"165","severity":1,"message":"169","line":13,"column":8,"nodeType":"167","messageId":"168","endLine":13,"endColumn":19},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"165","severity":1,"message":"174","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"175","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":27},{"ruleId":"165","severity":1,"message":"176","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":22},{"ruleId":"165","severity":1,"message":"177","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":9,"column":17,"nodeType":"180","endLine":9,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":52,"column":29,"nodeType":"180","endLine":54,"endColumn":84},{"ruleId":"165","severity":1,"message":"183","line":1,"column":19,"nodeType":"167","messageId":"168","endLine":1,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":17,"column":8,"nodeType":"186","endLine":17,"endColumn":10,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"179","line":101,"column":25,"nodeType":"180","endLine":101,"endColumn":53},{"ruleId":"170","replacedBy":"188"},{"ruleId":"172","replacedBy":"189"},{"ruleId":"165","severity":1,"message":"190","line":6,"column":19,"nodeType":"167","messageId":"168","endLine":6,"endColumn":30},{"ruleId":"165","severity":1,"message":"191","line":10,"column":11,"nodeType":"167","messageId":"168","endLine":10,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":15,"column":11,"nodeType":"180","endLine":15,"endColumn":71},{"ruleId":"192","severity":1,"message":"193","line":32,"column":19,"nodeType":"180","endLine":39,"endColumn":21},{"ruleId":"165","severity":1,"message":"194","line":100,"column":22,"nodeType":"167","messageId":"168","endLine":100,"endColumn":25},{"ruleId":"178","severity":1,"message":"179","line":14,"column":21,"nodeType":"180","endLine":14,"endColumn":43},"no-unused-vars","'HighlightPage' is defined but never used.","Identifier","unusedVar","'ScrollToTop' is defined but never used.","no-native-reassign",["195"],"no-negated-in-lhs",["196"],"'React' is defined but never used.","'BasketballGraphic' is defined but never used.","'HomeDownIcon' is defined but never used.","'classNames' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'withRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'toggleHeader'. Either include it or remove the dependency array. If 'toggleHeader' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["197"],["195"],["196"],"'toggleError' is assigned a value but never used.","'onLogin' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},"Update the dependencies array to be: [toggleHeader]",{"range":"200","text":"201"},[504,506],"[toggleHeader]"]